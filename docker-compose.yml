version: '3.8'

services:
  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    container_name: backend
    build: ./backend
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=your_database
      - DB_USER=your_user
      - DB_PASSWORD=your_password
    depends_on:
      - mysql
    networks:
      - app-network

  mysql:
    image: mysql:latest
    container_name: mysql-database
    environment:
      MYSQL_ROOT_PASSWORD: your_password
      MYSQL_DATABASE: your_database
      MYSQL_USER: your_user
      MYSQL_PASSWORD: your_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - app-network

  backup:
    image: mysql:latest
    container_name: mysql-backup
    volumes:
      - ./database:/database
      - ./backups:/backup
    entrypoint: >
      /bin/sh -c "chmod +x /database/backup.sh &&
                  crontab -l | { cat; echo '0 * * * * /database/backup.sh'; } | crontab - &&
                  crond -f"

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: